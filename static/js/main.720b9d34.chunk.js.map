{"version":3,"sources":["NewBookForm.js","BookInfo.js","BookList.js","App.js","serviceWorker.js","index.js"],"names":["NewBookForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","validateISBN","ISBN","length","array","split","sum","i","parseInt","console","log","state","_this2","visibility","background","react_default","a","createElement","className","onSubmit","addBook","htmlFor","type","name","pattern","required","placeholder","id","style","onChange","e","setState","target","value","defaultChecked","disabled","Component","BookInfo","switchEditMode","editMode","title","current","author","pages","rating","checkValidity","editBook","React","createRef","book","data-isbn","onClick","deleteBook","ref","defaultValue","repeat","BookList","books","map","src_BookInfo","key","App","_callee","_e$target","regenerator_default","wrap","_context","prev","next","preventDefault","trim","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","data","stop","_callee2","rate","_context2","querySelector","dataset","isbn","newISBN","_callee3","_context3","src_NewBookForm","src_BookList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.720b9d34.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./css/NewBookForm.css\";\r\n\r\nclass NewBookForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ISBN: \"\"\r\n    };\r\n  }\r\n\r\n  validateISBN = ISBN => {\r\n    if (ISBN.length === 13) {\r\n      const array = ISBN.split(\"\");\r\n      let sum = 0;\r\n      for (let i = 1; i <= array.length-1; i++) {\r\n        if (i % 2 == 1) {\r\n          sum += parseInt(array[i - 1]);\r\n        } else {\r\n          sum += 3 * parseInt(array[i - 1]);\r\n        }\r\n      }\r\n      console.log(sum);\r\n      console.log(10 - (sum % 10))\r\n      if (sum % 10 === 0) {\r\n        return parseInt(array[12]) === 0;\r\n      }\r\n      return 10 - (sum % 10) === parseInt(array[12]);\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let visibility = this.validateISBN(this.state.ISBN) ? \"hidden\" : \"visible\";\r\n    let background = this.validateISBN(this.state.ISBN)\r\n      ? \"transparent\"\r\n      : \"rgba(255, 0, 0, 0.143)\";\r\n    return (\r\n      <div className=\"new-book-container\">\r\n        <h3>Add a new book</h3>\r\n        <form onSubmit={this.props.addBook}>\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            pattern=\"^[A-Z]{1}[A-Za-z\\s0-9]{2,45}\"\r\n            required\r\n            placeholder=\" \"\r\n          />\r\n          <label htmlFor=\"author\">Author</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"author\"\r\n            pattern=\"[A-Z]{1}[a-z.]{1,15}\\s{1}[A-Z]{1}[a-z]{2,20}\"\r\n            required\r\n            placeholder=\" \"\r\n          />\r\n          <label htmlFor=\"ISBN\">ISBN</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"ISBN\"\r\n            id=\"ISBN\"\r\n            pattern=\"[0-9]{13}\"\r\n            required\r\n            placeholder=\" \"\r\n            style={{ background }}\r\n            onChange={e => this.setState({ ISBN: e.target.value })}\r\n          />\r\n          <p className=\"error-sign\" style={{ visibility }}>\r\n            !\r\n          </p>\r\n          <label htmlFor=\"pages\">Number of pages</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"pages\"\r\n            pattern=\"[0-9]{2,4}\"\r\n            required\r\n            placeholder=\" \"\r\n          />\r\n          <label htmlFor=\"rating\">Your rating</label>\r\n          <div className=\"rating-stars\">\r\n            <input type=\"radio\" name=\"rating\" value=\"1\" id=\"rate-1\" />\r\n            <label htmlFor=\"rate-1\">★</label>\r\n            <input type=\"radio\" name=\"rating\" value=\"2\" id=\"rate-2\" />\r\n            <label htmlFor=\"rate-2\">★</label>\r\n            <input type=\"radio\" name=\"rating\" value=\"3\" id=\"rate-3\" />\r\n            <label htmlFor=\"rate-3\">★</label>\r\n            <input type=\"radio\" name=\"rating\" value=\"4\" id=\"rate-4\" />\r\n            <label htmlFor=\"rate-4\">★</label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"rating\"\r\n              value=\"5\"\r\n              id=\"rate-5\"\r\n              defaultChecked\r\n            />\r\n            <label htmlFor=\"rate-5\">★</label>\r\n          </div>\r\n\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Add\"\r\n            disabled={!this.validateISBN(this.state.ISBN)}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNewBookForm.propTypes = {};\r\n\r\nexport default NewBookForm;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./css/BookInfo.css\";\r\n\r\nclass BookInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.title = React.createRef();\r\n    this.author = React.createRef();\r\n    this.ISBN = React.createRef();\r\n    this.pages = React.createRef();\r\n    this.rating = React.createRef();\r\n\r\n    this.state = {\r\n      editMode: false,\r\n      ISBN: this.props.book.ISBN\r\n    };\r\n  }\r\n\r\n  validateISBN = ISBN => {\r\n    if (ISBN.length === 13) {\r\n      const array = ISBN.split(\"\");\r\n      let sum = 0;\r\n      for (let i = 1; i <= array.length; i++) {\r\n        if (i % 2 == 1) {\r\n          sum += parseInt(array[i - 1]);\r\n        } else {\r\n          sum += 3 * parseInt(array[i - 1]);\r\n        }\r\n      }\r\n      return sum % 10 === 0 ? true : false;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  switchEditMode = e => {\r\n    if (this.state.editMode) {\r\n      const title = this.title.current;\r\n      const author = this.author.current;\r\n      const ISBN = this.ISBN.current;\r\n      const pages = this.pages.current;\r\n      const rating = this.rating.current;\r\n      console.log(rating);\r\n\r\n      if (\r\n        title.checkValidity() &&\r\n        author.checkValidity() &&\r\n        this.validateISBN(this.state.ISBN) &&\r\n        pages.checkValidity()\r\n      ) {\r\n        this.setState({ editMode: false });\r\n        this.props.editBook(\r\n          e,\r\n          title,\r\n          author,\r\n          ISBN,\r\n          pages,\r\n          rating\r\n        );\r\n      }\r\n    } else {\r\n      this.setState({ editMode: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const book = this.props.book;\r\n    let background = this.validateISBN(this.state.ISBN)\r\n      ? \"transparent\"\r\n      : \"rgba(255, 0, 0, 0.143)\";\r\n    return (\r\n      <div className=\"book-card\">\r\n        <button\r\n          className=\"edit\"\r\n          data-isbn={book.ISBN}\r\n          onClick={this.switchEditMode}\r\n        />\r\n        <button\r\n          className=\"delete\"\r\n          data-isbn={book.ISBN}\r\n          onClick={this.props.deleteBook}\r\n        >\r\n          ✖\r\n        </button>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"left-column\">Title:</td>\r\n              <td className=\"right-column\">\r\n                {this.state.editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    id=\"title\"\r\n                    pattern=\"^[A-Z]{1}[A-Za-z\\s0-9]{2,45}\"\r\n                    required\r\n                    ref={this.title}\r\n                    defaultValue={book.title}\r\n                  />\r\n                ) : (\r\n                  book.title\r\n                )}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left-column\">Author:</td>\r\n              <td className=\"right-column\">\r\n                {\" \"}\r\n                {this.state.editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"author\"\r\n                    id=\"author\"\r\n                    pattern=\"[A-Z]{1}[a-z.]{1,15}\\s{1}[A-Z]{1}[a-z]{2,20}\"\r\n                    required\r\n                    ref={this.author}\r\n                    defaultValue={book.author}\r\n                  />\r\n                ) : (\r\n                  book.author\r\n                )}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left-column\">ISBN:</td>\r\n              <td className=\"right-column\">\r\n                {\" \"}\r\n                {this.state.editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"ISBN\"\r\n                    id=\"ISBN\"\r\n                    pattern=\"[0-9]{13}\"\r\n                    required\r\n                    style={{ background }}\r\n                    ref={this.ISBN}\r\n                    onChange={e => this.setState({ ISBN: e.target.value })}\r\n                    defaultValue={book.ISBN}\r\n                  />\r\n                ) : (\r\n                  book.ISBN\r\n                )}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left-column\">No. of pages:</td>\r\n              <td className=\"right-column\">\r\n                {\" \"}\r\n                {this.state.editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"pages\"\r\n                    id=\"pages\"\r\n                    pattern=\"[0-9]{2,4}\"\r\n                    required\r\n                    ref={this.pages}\r\n                    defaultValue={book.pages}\r\n                  />\r\n                ) : (\r\n                  book.pages\r\n                )}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"left-column\"> Your rating:</td>\r\n              <td className=\"right-column\">\r\n                {\" \"}\r\n                {this.state.editMode ? (\r\n                  <div className=\"rating-edition\" ref={this.rating}>\r\n                    <input type=\"radio\" name=\"rating\" value=\"1\" id=\"rated-1\" />\r\n                    <label htmlFor=\"rated-1\">★</label>\r\n                    <input type=\"radio\" name=\"rating\" value=\"2\" id=\"rated-2\" />\r\n                    <label htmlFor=\"rated-2\">★</label>\r\n                    <input type=\"radio\" name=\"rating\" value=\"3\" id=\"rated-3\" />\r\n                    <label htmlFor=\"rated-3\">★</label>\r\n                    <input type=\"radio\" name=\"rating\" value=\"4\" id=\"rated-4\" />\r\n                    <label htmlFor=\"rated-4\">★</label>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"rating\"\r\n                      value=\"5\"\r\n                      id=\"rated-5\"\r\n                      defaultChecked\r\n                    />\r\n                    <label htmlFor=\"rated-5\">★</label>\r\n                  </div>\r\n                ) : (\r\n                  \"★ \".repeat(parseInt(book.rating))\r\n                )}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBookInfo.propTypes = {};\r\n\r\nexport default BookInfo;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./css/BookList.css\";\r\nimport BookInfo from \"./BookInfo\";\r\n\r\nclass BookList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"book-list-container\">\r\n        <h3>Books you've read:</h3>\r\n        <div>\r\n          {this.props.books.map((book, i) => (\r\n            <BookInfo\r\n              key={i}\r\n              book={book}\r\n              deleteBook={this.props.deleteBook}\r\n              editBook={this.props.editBook}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBookList.propTypes = {};\r\n\r\nexport default BookList;\r\n","import React, { Component } from \"react\";\nimport \"./css/App.css\";\nimport NewBookForm from \"./NewBookForm\";\nimport BookList from \"./BookList\";\n\nclass App extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    fetch(\"https://book-tracker-server.herokuapp.com/booklist\")\n      .then(response => response.json())\n      .then(data => this.setState({ books: data }));\n  }\n\n  addBook = async e => {\n    e.preventDefault();\n\n    const { title, author, ISBN, pages, rating } = e.target;\n    title.value = title.value.trim();\n    await fetch(\"https://book-tracker-server.herokuapp.com/add-book\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        title: title.value,\n        author: author.value,\n        ISBN: ISBN.value,\n        pages: pages.value,\n        rating: rating.value\n      })\n    }).then(response =>\n      response.json().then(data => this.setState({ books: data }))\n    );\n    title.value = \"\";\n    author.value = \"\";\n    ISBN.value = \"\";\n    pages.value = \"\";\n    rating.value = \"5\";\n  };\n\n  editBook = async (e, title, author, ISBN, pages, rating) => {\n    console.log(rating);\n    const rate = rating.querySelector('input[type=\"radio\"]:checked').value;\n\n    if (\n      title.checkValidity() &&\n      author.checkValidity() &&\n      ISBN.checkValidity() &&\n      pages.checkValidity()\n    ) {\n      console.log(\"Editing\");\n      await fetch(\"https://book-tracker-server.herokuapp.com/edit-book\", {\n        method: \"put\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ISBN: e.target.dataset.isbn,\n          title: title.value,\n          author: author.value,\n          newISBN: ISBN.value,\n          pages: pages.value,\n          rating: rate\n        })\n      }).then(response =>\n        response.json().then(data => this.setState({ books: data }))\n      );\n    }\n  };\n\n  deleteBook = async e => {\n    console.log(\"delete\");\n    const ISBN = e.target.dataset.isbn;\n    await fetch(\"https://book-tracker-server.herokuapp.com/delete-book\", {\n      method: \"delete\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        ISBN\n      })\n    }).then(response =>\n      response.json().then(data => this.setState({ books: data }))\n    );\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <h1> Welcome to Book Tracker</h1>\n        <h3>\n          {\" \"}\n          You've read {this.state.books.length}{\" \"}\n          {this.state.books.length === 1 ? \"book\" : \"books\"}\n        </h3>\n        <div className=\"book-container\">\n          <NewBookForm addBook={this.addBook} />\n          <BookList\n            editBook={this.editBook}\n            deleteBook={this.deleteBook}\n            books={this.state.books}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}